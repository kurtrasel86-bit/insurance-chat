import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();

const sampleDocuments = [
  {
    companyCode: '–°–û–ì–ê–ó',
    productCode: '–û–°–ê–ì–û',
    title: '–û–°–ê–ì–û –°–û–ì–ê–ó - –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –∞–≤—Ç–æ—Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–µ',
    content: `–û–°–ê–ì–û –æ—Ç –°–û–ì–ê–ó - –Ω–∞–¥–µ–∂–Ω–∞—è –∑–∞—â–∏—Ç–∞ –Ω–∞ –¥–æ—Ä–æ–≥–∞—Ö.

–û—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:
- –ë—ã—Å—Ç—Ä–æ–µ —É—Ä–µ–≥—É–ª–∏—Ä–æ–≤–∞–Ω–∏–µ —É–±—ã—Ç–∫–æ–≤
- –®–∏—Ä–æ–∫–∞—è —Å–µ—Ç—å –æ—Ñ–∏—Å–æ–≤
- –û–Ω–ª–∞–π–Ω –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∏ –ø—Ä–æ–¥–ª–µ–Ω–∏–µ
- –ö—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞

–°—Ç–æ–∏–º–æ—Å—Ç—å: –æ—Ç 1,200 —Ä—É–±–ª–µ–π –≤ –≥–æ–¥

–ü–æ–∫—Ä—ã—Ç–∏–µ:
- –£—â–µ—Ä–± —Ç—Ä–µ—Ç—å–∏–º –ª–∏—Ü–∞–º: –¥–æ 400,000 —Ä—É–±–ª–µ–π
- –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ —Ä–∞—Å—Ö–æ–¥—ã: –¥–æ 500,000 —Ä—É–±–ª–µ–π
- –£—â–µ—Ä–± –∏–º—É—â–µ—Å—Ç–≤—É: –¥–æ 100,000 —Ä—É–±–ª–µ–π

–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏:
- –≠–≤–∞–∫—É–∞—Ü–∏—è –ø—Ä–∏ –î–¢–ü
- –¢–µ—Ö–ø–æ–º–æ—â—å –Ω–∞ –¥–æ—Ä–æ–≥–µ
- –ó–∞–º–µ–Ω–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª—è –Ω–∞ –≤—Ä–µ–º—è —Ä–µ–º–æ–Ω—Ç–∞`,
  },
  {
    companyCode: '–ò–ù–ì–û–°–°–¢–†–ê–•',
    productCode: '–ö–ê–°–ö–û',
    title: '–ö–ê–°–ö–û –ò–ù–ì–û–°–°–¢–†–ê–• - –ö–æ–º–ø–ª–µ–∫—Å–Ω–æ–µ –∞–≤—Ç–æ—Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–µ',
    content: `–ö–ê–°–ö–û –æ—Ç –ò–ù–ì–û–°–°–¢–†–ê–• - –ø–æ–ª–Ω–∞—è –∑–∞—â–∏—Ç–∞ –≤–∞—à–µ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è.

–í–∏–¥—ã –ø–æ–∫—Ä—ã—Ç–∏—è:
1. –ü–æ–ª–Ω–∞—è –≥–∏–±–µ–ª—å/–∫—Ä–∞–∂–∞: —Ä—ã–Ω–æ—á–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –∞–≤—Ç–æ
2. –ß–∞—Å—Ç–∏—á–Ω—ã–µ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∏—è: –ø–æ–ª–Ω–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ —Ä–µ–º–æ–Ω—Ç–∞
3. –°—Ç–∏—Ö–∏–π–Ω—ã–µ –±–µ–¥—Å—Ç–≤–∏—è: –≤–∫–ª—é—á–µ–Ω—ã
4. –£–≥–æ–Ω: –ø–æ–ª–Ω–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ
5. –°—Ç–µ–∫–ª–∞ –∏ —Ñ–∞—Ä—ã: –æ—Ç–¥–µ–ª—å–Ω–∞—è –æ–ø—Ü–∏—è

–°—Ç–æ–∏–º–æ—Å—Ç—å: 3-8% –æ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª—è

–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:
- –ü—Ä—è–º—ã–µ —Ä–∞—Å—á–µ—Ç—ã —Å –∞–≤—Ç–æ—Å–µ—Ä–≤–∏—Å–∞–º–∏
- –ë—ã—Å—Ç—Ä–æ–µ —É—Ä–µ–≥—É–ª–∏—Ä–æ–≤–∞–Ω–∏–µ (–¥–æ 5 –¥–Ω–µ–π)
- –û–Ω–ª–∞–π–Ω-–∫–∞–±–∏–Ω–µ—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª–∏—Å–æ–º
- –ú–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ

–°–∫–∏–¥–∫–∏:
- –ë–µ–∑ –î–¢–ü 1 –≥–æ–¥: -5%
- –ë–µ–∑ –î–¢–ü 2 –≥–æ–¥–∞: -10%
- –ë–µ–∑ –î–¢–ü 3+ –≥–æ–¥–∞: -15%`,
  },
  {
    companyCode: '–†–ï–°–û',
    productCode: '–î–ú–°',
    title: '–î–ú–° –†–ï–°–û - –î–æ–±—Ä–æ–≤–æ–ª—å–Ω–æ–µ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–µ —Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–µ',
    content: `–î–ú–° –æ—Ç –†–ï–°–û - –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è –ø–æ–º–æ—â—å.

–ü—Ä–æ–≥—Ä–∞–º–º—ã —Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏—è:
- –ë–∞–∑–æ–≤—ã–π: –æ—Ç 15,000 —Ä—É–±–ª–µ–π/–≥–æ–¥
- –°—Ç–∞–Ω–¥–∞—Ä—Ç: –æ—Ç 25,000 —Ä—É–±–ª–µ–π/–≥–æ–¥
- –ü—Ä–µ–º–∏—É–º: –æ—Ç 40,000 —Ä—É–±–ª–µ–π/–≥–æ–¥

–ü–æ–∫—Ä—ã—Ç–∏–µ:
- –ê–º–±—É–ª–∞—Ç–æ—Ä–Ω–æ–µ –ª–µ—á–µ–Ω–∏–µ: –¥–æ 200,000 —Ä—É–±–ª–µ–π/–≥–æ–¥
- –°—Ç–∞—Ü–∏–æ–Ω–∞—Ä–Ω–æ–µ –ª–µ—á–µ–Ω–∏–µ: –¥–æ 500,000 —Ä—É–±–ª–µ–π/–≥–æ–¥
- –°—Ç–æ–º–∞—Ç–æ–ª–æ–≥–∏—è: –¥–æ 50,000 —Ä—É–±–ª–µ–π/–≥–æ–¥
- –°–∫–æ—Ä–∞—è –ø–æ–º–æ—â—å: –≤–∫–ª—é—á–µ–Ω–∞

–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:
- –ü—Ä—è–º—ã–µ —Ä–∞—Å—á–µ—Ç—ã —Å –∫–ª–∏–Ω–∏–∫–∞–º–∏
- –î–æ—Å—Ç—É–ø –∫ –ª—É—á—à–∏–º –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–º —Ü–µ–Ω—Ç—Ä–∞–º
- –õ–∏—á–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä
- –¢–µ–ª–µ–º–µ–¥–∏—Ü–∏–Ω–∞ 24/7

–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø—Ü–∏–∏:
- –°—Ç–æ–º–∞—Ç–æ–ª–æ–≥–∏—è —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è
- –û—Ñ—Ç–∞–ª—å–º–æ–ª–æ–≥–∏—è
- –ü–µ–¥–∏–∞—Ç—Ä–∏—è`,
  },
  {
    companyCode: '–í–°–ö',
    productCode: '–ù–ï–î–í–ò–ñ–ò–ú–û–°–¢–¨',
    title: '–°—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–µ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ –í–°–ö',
    content: `–ó–∞—â–∏—Ç–∏—Ç–µ —Å–≤–æ—é –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å —Å –í–°–ö.

–ß—Ç–æ –ø–æ–∫—Ä—ã–≤–∞–µ—Ç—Å—è:
- –ü–æ–∂–∞—Ä –∏ –≤–∑—Ä—ã–≤: –¥–æ 5,000,000 —Ä—É–±–ª–µ–π
- –ó–∞—Ç–æ–ø–ª–µ–Ω–∏–µ: –¥–æ 1,000,000 —Ä—É–±–ª–µ–π
- –ö—Ä–∞–∂–∞ —Å–æ –≤–∑–ª–æ–º–æ–º: –¥–æ 500,000 —Ä—É–±–ª–µ–π
- –°—Ç–∏—Ö–∏–π–Ω—ã–µ –±–µ–¥—Å—Ç–≤–∏—è: –¥–æ 2,000,000 —Ä—É–±–ª–µ–π
- –£—â–µ—Ä–± –∏–º—É—â–µ—Å—Ç–≤—É —Å–æ—Å–µ–¥–µ–π: –¥–æ 1,000,000 —Ä—É–±–ª–µ–π

–°—Ç–æ–∏–º–æ—Å—Ç—å: –æ—Ç 1,500 —Ä—É–±–ª–µ–π/–≥–æ–¥ (–∑–∞–≤–∏—Å–∏—Ç –æ—Ç –ø–ª–æ—â–∞–¥–∏)

–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ —Å—Ç—Ä–∞—Ö—É–µ—Ç—Å—è:
- –ú–µ–±–µ–ª—å –∏ –±—ã—Ç–æ–≤–∞—è —Ç–µ—Ö–Ω–∏–∫–∞
- –õ–∏—á–Ω—ã–µ –≤–µ—â–∏
- –†–µ–º–æ–Ω—Ç –∏ –æ—Ç–¥–µ–ª–∫–∞
- –ö–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏

–°–µ—Ä–≤–∏—Å—ã:
- –ê–≤–∞—Ä–∏–π–Ω–∞—è —Å–ª—É–∂–±–∞ 24/7
- –ù–µ–∑–∞–≤–∏—Å–∏–º–∞—è –æ—Ü–µ–Ω–∫–∞ —É—â–µ—Ä–±–∞
- –û–ø–ª–∞—Ç–∞ –∑–∞ —Ä–µ–º–æ–Ω—Ç –Ω–∞–ø—Ä—è–º—É—é –ø–æ–¥—Ä—è–¥—á–∏–∫–∞–º
- –í—Ä–µ–º–µ–Ω–Ω–æ–µ –∂–∏–ª—å–µ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ —Ä–µ–º–æ–Ω—Ç–∞`,
  },
  {
    companyCode: '–†–û–°–ì–û–°–°–¢–†–ê–•',
    productCode: '–ë–ò–ó–ù–ï–°',
    title: '–°—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–µ –±–∏–∑–Ω–µ—Å–∞ –†–û–°–ì–û–°–°–¢–†–ê–•',
    content: `–ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è –∑–∞—â–∏—Ç–∞ –≤–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞ —Å –†–û–°–ì–û–°–°–¢–†–ê–•.

–ë–∞–∑–æ–≤–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ:
- –ò–º—É—â–µ—Å—Ç–≤–æ –∫–æ–º–ø–∞–Ω–∏–∏: –¥–æ 10,000,000 —Ä—É–±–ª–µ–π
- –û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –ø–µ—Ä–µ–¥ —Ç—Ä–µ—Ç—å–∏–º–∏ –ª–∏—Ü–∞–º–∏: –¥–æ 5,000,000 —Ä—É–±–ª–µ–π
- –ü–µ—Ä–µ—Ä—ã–≤ –≤ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏: –¥–æ 2,000,000 —Ä—É–±–ª–µ–π
- –≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ: –¥–æ 1,000,000 —Ä—É–±–ª–µ–π

–°—Ç–æ–∏–º–æ—Å—Ç—å: –æ—Ç 25,000 —Ä—É–±–ª–µ–π/–≥–æ–¥ (–∑–∞–≤–∏—Å–∏—Ç –æ—Ç –æ—Ç—Ä–∞—Å–ª–∏)

–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–∫—Ä—ã—Ç–∏—è:
- –ö–∏–±–µ—Ä-—Ä–∏—Å–∫–∏: –∑–∞—â–∏—Ç–∞ –¥–∞–Ω–Ω—ã—Ö, –≤–∑–ª–æ–º—ã
- –û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –¥–∏—Ä–µ–∫—Ç–æ—Ä–∞
- –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å
- –¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –≥—Ä—É–∑–æ–≤

–û—Ç—Ä–∞—Å–ª–∏:
- –¢–æ—Ä–≥–æ–≤–ª—è
- IT –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏
- –ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ
- –£—Å–ª—É–≥–∏
- HoReCa

–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:
- –ë—ã—Å—Ç—Ä–æ–µ —É—Ä–µ–≥—É–ª–∏—Ä–æ–≤–∞–Ω–∏–µ —É–±—ã—Ç–∫–æ–≤ (–¥–æ 10 –¥–Ω–µ–π)
- –Æ—Ä–∏–¥–∏—á–µ—Å–∫–æ–µ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ
- –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –ø–æ —Ä–∏—Å–∫–∞–º
- –û–Ω–ª–∞–π–Ω-–∫–∞–±–∏–Ω–µ—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª–∏—Å–æ–º`,
  },
];

async function seed() {
  console.log('üå± Starting seed...');

  // –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ
  console.log('üóëÔ∏è  Cleaning old data...');
  await prisma.kBChunk.deleteMany();
  await prisma.kBDoc.deleteMany();

  // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∞–≥–µ–Ω—Ç–∞
  console.log('üë§ Creating test agent...');
  const agent = await prisma.agent.upsert({
    where: { login: 'admin' },
    update: {},
    create: {
      name: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
      login: 'admin',
      password: 'admin123', // –í –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ –Ω—É–∂–µ–Ω —Ö–µ—à!
      status: 'online',
      companies: '–°–û–ì–ê–ó,–ò–ù–ì–û–°–°–¢–†–ê–•,–†–ï–°–û,–í–°–ö,–†–û–°–ì–û–°–°–¢–†–ê–•',
    },
  });
  console.log('‚úÖ Agent created:', agent.login);

  // –î–æ–±–∞–≤–ª—è–µ–º –¥–æ–∫—É–º–µ–Ω—Ç—ã –≤ –±–∞–∑—É –∑–Ω–∞–Ω–∏–π
  console.log('üìö Adding knowledge base documents...');
  for (const doc of sampleDocuments) {
    // –†–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ —á–∞–Ω–∫–∏
    const chunks = splitIntoChunks(doc.content, 500, 50);

    const kbDoc = await prisma.kBDoc.create({
      data: {
        companyCode: doc.companyCode,
        productCode: doc.productCode,
        title: doc.title,
        version: '1.0',
      },
    });

    for (let i = 0; i < chunks.length; i++) {
      await prisma.kBChunk.create({
        data: {
          docId: kbDoc.id,
          chunkIdx: i,
          text: chunks[i],
        },
      });
    }

    console.log(`‚úÖ Added: ${doc.title} (${chunks.length} chunks)`);
  }

  console.log('‚ú® Seed completed successfully!');
}

function splitIntoChunks(text: string, chunkSize: number, overlap: number): string[] {
  const chunks: string[] = [];
  let start = 0;

  while (start < text.length) {
    const end = Math.min(start + chunkSize, text.length);
    chunks.push(text.substring(start, end));
    start += chunkSize - overlap;
  }

  return chunks;
}

seed()
  .catch((e) => {
    console.error('‚ùå Seed failed:', e);
    process.exit(1);
  })
  .finally(async () => {
    await prisma.$disconnect();
  });